Garaget: En representation av själva byggnaden. 
Garaget är en plats där en mängd av fordon kan förvaras. 
Garaget kan alltså representeras som en samling av fordon.

Fordon: Bilar, motorcyklar, enhjulingar eller vad för typ av fordon man nu vill ställa in i 
garaget. 


Initial Class plan

Class: Garage implement as a generic collection class Garage <T> and that collection is managed through an Array which means the garage capacity must be entered.

Class: Vehicle 
Sub-Class: Vehicle Airplane, Motorcycle, Car, Bus, Boat
Base Class Vehicle Properties: Unique RegNum, Wheelsnumber, Colour, Engine Type
Derive Class Vehicle properties: Vehicle brand, Number of Engines, Cylinder volume, Fueltype(Gas/Diesel/Electric/Kerosene), Number of seats, Length,



En kollektion av fordon; klassen Garage.
● En fordonsklass, klassen Vehicle.
● Ett antal subklasser till fordon.
● Ett användargränssnitt som låter oss använda funktionaliteten hos ett garage. Här 
sker all interaktion med användaren. 
● En GarageHandler. För att abstrahera ett lager så att det inte finns någon direkt 
kontakt mellan användargränssnittet och garage klassen. Detta görs lämpligen 
genom en klass som hanterar funktionaliteten som gränssnittet behöver ha 
tillgång till. 
● Vi programmerar inte direkt mot konkreta typer så vi använder oss av Interfaces 
för det tex IUI, IHandler, IVehicle. (Tips är att bryta ut till interface när 
implementationen är klar om man tycker den här delen är svår)

Funktionalitet
Det ska gå att:
● Lista samtliga parkerade fordon
● Lista fordonstyper och hur många av varje som står i garaget
● Lägga till och ta bort fordon ur garaget
● Sätta en kapacitet (antal parkeringsplatser) vid instansieringen av ett nytt garage
● Möjlighet att populera garaget med ett antal fordon från start. 
● Hitta ett specifikt fordon via registreringsnumret. Det ska gå fungera med både 
ABC123 samt Abc123 eller AbC123. 
● Söka efter fordon utifrån en egenskap eller flera (alla möjliga kombinationer från 
basklassen Vehicle). Exempelvis:
○ Alla svarta fordon med fyra hjul.
○ Alla motorcyklar som är rosa och har 3 hjul.
○ Alla lastbilar
○ Alla röda fordon
● Användaren ska få feedback på att saker gått bra eller dåligt. Till exempel när vi 
parkerat ett fordon vill vi få en bekräftelse på att fordonet är parkerat. Om det inte 
går vill användaren få veta varför. 
Programmet ska vara en konsolapplikation med ett textbaserat användargränssnitt.
Från gränssnittet skall det gå att:
● Navigera till samtlig funktionalitet från garage via gränssnittet
● Skapa ett garage med en användar specificerad storlek
● Det skall gå att stänga av applikationen från gränssnittet
Applikationen skall fel hantera indata på ett robust sätt, så att den inte kraschar vid 
felaktig inmatning eller användning.